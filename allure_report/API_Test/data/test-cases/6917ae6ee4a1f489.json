{"uid":"6917ae6ee4a1f489","name":"Search products with minus page number","fullName":"tests_api.test_products_apis#test_category_with_minus_page","historyId":"0b492e98a0106ed6456258c54c45876a","time":{"start":1671545420492,"stop":1671545421028,"duration":536},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"category = 'women'\n\n    @allure.feature(\"Products APIs\")\n    @allure.story(\"/products/{category}?paging={paging}\")\n    @allure.title(\"Search products with minus page number\")\n    @pytest.mark.parametrize(\"category\", [\"women\"])\n    def test_category_with_minus_page(category):\n        product = ProductsAPI()\n    \n        with allure.step(\"Get category products of -1 page\"):\n            res = product.get_products_by_category(category, -1)\n        with allure.step(\"Assert if status code is 400\"):\n            # 雖然實際上是報500，但因為理想應該是要報400所以期待結果維持理想值\n>           assert res.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_products_apis.py:146: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"category = 'women'\n\n    @allure.feature(\"Products APIs\")\n    @allure.story(\"/products/{category}?paging={paging}\")\n    @allure.title(\"Search products with minus page number\")\n    @pytest.mark.parametrize(\"category\", [\"women\"])\n    def test_category_with_minus_page(category):\n        product = ProductsAPI()\n    \n        with allure.step(\"Get category products of -1 page\"):\n            res = product.get_products_by_category(category, -1)\n        with allure.step(\"Assert if status code is 400\"):\n            # 雖然實際上是報500，但因為理想應該是要報400所以期待結果維持理想值\n>           assert res.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_products_apis.py:146: AssertionError","steps":[{"name":"Get category products of -1 page","time":{"start":1671545420492,"stop":1671545421028,"duration":536},"status":"passed","steps":[],"attachments":[{"uid":"19f2504a1890699","name":"Response Headers","source":"19f2504a1890699.txt","type":"text/plain","size":299},{"uid":"1108794b2f9b2523","name":"Response Body","source":"1108794b2f9b2523.txt","type":"text/plain","size":41}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"Assert if status code is 400","time":{"start":1671545421028,"stop":1671545421028,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"/Users/mingchun/.jenkins/workspace/Stylish - API Automation Test/student/mingchun/PJT_Automation/tests_api/test_products_apis.py\", line 146, in test_category_with_minus_page\n    assert res.status_code == 400\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"b6dad77917b62b03","name":"log","source":"b6dad77917b62b03.txt","type":"text/plain","size":287}],"parameters":[],"stepsCount":2,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[],"labels":[{"name":"feature","value":"Products APIs"},{"name":"story","value":"/products/{category}?paging={paging}"},{"name":"parentSuite","value":"tests_api"},{"name":"suite","value":"test_products_apis"},{"name":"host","value":"Mingchuns-MBP"},{"name":"thread","value":"56996-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_api.test_products_apis"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"category","value":"'women'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"6917ae6ee4a1f489.json","parameterValues":["'women'"]}