{"uid":"fbd0e97d3b9cc3e3","name":"[Irregular] Broken order attribute","fullName":"tests_api.test_order_apis#test_order_with_broken_order_info","historyId":"393129c1983dba5a149dcb49153ef0f1","time":{"start":1671545370770,"stop":1671545371077,"duration":307},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"order = <api_objects.order.OrderAPI object at 0x11475fb20>\norder_info = {'order': {'freight': 30, 'payment': 'credit_card', 'recipient': {'address': '台北市', 'email': 'abc@abc.com', 'name': '陳...5678', ...}, 'shipping': 'delivery', ...}, 'prime': '30dc6b58456e397bdfcae27e7613ff331b651e41fa3835da958cae45324fe563'}\nattr = 'list'\n\n    @allure.feature(\"Order APIs\")\n    @allure.story(\"/order\")\n    @allure.title(\"[Irregular] Broken order attribute\")\n    @pytest.mark.parametrize(\"attr\", [*order_attr])\n    def test_order_with_broken_order_info(order: OrderAPI, order_info: dict, attr: str):\n        with allure.step(f'Make an order without order attr \"{attr}\"'):\n            order_info[\"order\"].pop(attr)\n            response = order.make_an_order(order_info)\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_order_apis.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"valid_user_account","time":{"start":1671545327066,"stop":1671545327068,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1671545327066,"stop":1671545327066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_products","time":{"start":1671545332997,"stop":1671545336700,"duration":3703},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"order","time":{"start":1671545365845,"stop":1671545366345,"duration":500},"status":"passed","steps":[],"attachments":[{"uid":"6643087a8bd75263","name":"Login Request Body","source":"6643087a8bd75263.txt","type":"text/plain","size":76},{"uid":"f49cfb08bb82fef6","name":"Response Headers","source":"f49cfb08bb82fef6.txt","type":"text/plain","size":301},{"uid":"1d8626577a03f0df","name":"Response Body","source":"1d8626577a03f0df.txt","type":"text/plain","size":475}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"driver","time":{"start":1671545366345,"stop":1671545367900,"duration":1555},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prime","time":{"start":1671545367901,"stop":1671545370754,"duration":2853},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"shopping_cart","time":{"start":1671545370754,"stop":1671545370768,"duration":14},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"order_info","time":{"start":1671545370769,"stop":1671545370769,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"order = <api_objects.order.OrderAPI object at 0x11475fb20>\norder_info = {'order': {'freight': 30, 'payment': 'credit_card', 'recipient': {'address': '台北市', 'email': 'abc@abc.com', 'name': '陳...5678', ...}, 'shipping': 'delivery', ...}, 'prime': '30dc6b58456e397bdfcae27e7613ff331b651e41fa3835da958cae45324fe563'}\nattr = 'list'\n\n    @allure.feature(\"Order APIs\")\n    @allure.story(\"/order\")\n    @allure.title(\"[Irregular] Broken order attribute\")\n    @pytest.mark.parametrize(\"attr\", [*order_attr])\n    def test_order_with_broken_order_info(order: OrderAPI, order_info: dict, attr: str):\n        with allure.step(f'Make an order without order attr \"{attr}\"'):\n            order_info[\"order\"].pop(attr)\n            response = order.make_an_order(order_info)\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_order_apis.py:135: AssertionError","steps":[{"name":"Make an order without order attr \"list\"","time":{"start":1671545370771,"stop":1671545371075,"duration":304},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"/Users/mingchun/.jenkins/workspace/Stylish - API Automation Test/student/mingchun/PJT_Automation/tests_api/test_order_apis.py\", line 135, in test_order_with_broken_order_info\n    assert response.status_code == 400\n","steps":[],"attachments":[{"uid":"c7c1222366189d4","name":"Order Detail","source":"c7c1222366189d4.txt","type":"text/plain","size":386},{"uid":"b9a4db0e239811da","name":"Response Headers","source":"b9a4db0e239811da.txt","type":"text/plain","size":299},{"uid":"783d9e86305a3c60","name":"Response Body","source":"783d9e86305a3c60.txt","type":"text/plain","size":41}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"b5add312d28bfe82","name":"log","source":"b5add312d28bfe82.txt","type":"text/plain","size":574}],"parameters":[],"stepsCount":1,"attachmentsCount":4,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1671545371634,"stop":1671545371763,"duration":129},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"/order"},{"name":"feature","value":"Order APIs"},{"name":"parentSuite","value":"tests_api"},{"name":"suite","value":"test_order_apis"},{"name":"host","value":"Mingchuns-MBP"},{"name":"thread","value":"56996-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_api.test_order_apis"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attr","value":"'list'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"fbd0e97d3b9cc3e3.json","parameterValues":["'list'"]}