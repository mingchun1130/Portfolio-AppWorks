{"uid":"e38d98a02248e7fd","name":"Checkout with valid values","fullName":"tests_web.test_web_checkout#test_checkout_with_valid_values","historyId":"336288ed5bc20975cd327a7b826dbf8b","time":{"start":1671543249528,"stop":1671543274364,"duration":24836},"description":"\n    檢查輸入有效的訂單資訊時，可成功結帳且結帳商品的資訊正確。\n    ","descriptionHtml":"<pre><code>檢查輸入有效的訂單資訊時，可成功結帳且結帳商品的資訊正確。\n</code></pre>\n","status":"failed","statusMessage":"AssertionError: assert 'For Item: [object Object], Product Price is required.' == '付款成功'\n  - 付款成功\n  + For Item: [object Object], Product Price is required.","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b3a05385d635be4de26410a727f3fbb6\")>\nrandom_product_ids = [201807202157, 1671541958752]\nall_color_code = {'亮綠': 'DDFFBB', '深藍': '334455', '淺棕': 'BB7744', '淺灰': 'CCCCCC', ...}\nuser = {'email': 'foo@bar.baz', 'password': '1234567890'}\ncheckout_info = {'Address': '台北市', 'Credit Card No': '4242 4242 4242 4242', 'Deliver Time': 'Anytime', 'Email': 'abc@abc.com', ...}\n\n    @allure.feature(\"Checkout\")\n    @allure.story(\"Checkout\")\n    @allure.title(\"Checkout with valid values\")\n    @allure.testcase(\n        TESTCASE_BASE_LINK + TESTCASE_CATEGORY + \"checkout-with-valid-values-3-test-cases\",\n        \"Checkout with valid values\",\n    )\n    @pytest.mark.parametrize(\"checkout_info\", valid_checkout_values)\n    def test_checkout_with_valid_values(driver, random_product_ids, all_color_code, user, checkout_info):\n        \"\"\"\n        檢查輸入有效的訂單資訊時，可成功結帳且結帳商品的資訊正確。\n        \"\"\"\n        with allure.step(\"Login success\"):\n            login = LoginPage(driver, \"http://54.201.140.239/login.html\")\n            login.enter_email_and_password(user[\"email\"], user[\"password\"])\n            login.login()\n            alert = login.wait_alert_prompt()\n            alert.accept()\n    \n        with allure.step(\"Add products to shopping cart\"):\n            product = ProductPage(driver)\n            shop_list = []\n            for id in random_product_ids:\n                product.open_product_page(id)\n                shop_list.append(\n                    {\n                        \"id\": str(id),\n                        \"name\": product.get_product_name(),\n                        \"color\": {v: k for k, v in all_color_code.items()}[product.select_random_color()],\n                        \"size\": product.select_random_size(),\n                        \"quantity\": product.select_random_quantity(),\n                        \"price\": product.get_product_price(),\n                        \"subtotal\": product.get_current_quantity() * product.get_product_price(),\n                    }\n                )\n                product.add_product_to_cart()\n                alert = product.wait_alert_prompt()\n                alert.accept()\n                logging.info(shop_list[-1])\n            allure.attach(\n                json.dumps(shop_list, indent=2, ensure_ascii=False),\n                \"cart_item_list\",\n                attachment_type=allure.attachment_type.TEXT,\n            )\n    \n        with allure.step(\"Enter shopping cart\"):\n            cart = CartPage(driver)\n            cart.enter_shopping_cart()\n    \n        with allure.step(\"Check if product info is displayed correctly in cart\"):\n            cart_item_list = []\n            for item in cart.get_cart_items():\n                cart_item_list.append(cart.get_item_info(item))\n            allure.attach(\n                json.dumps(cart_item_list, indent=2, ensure_ascii=False),\n                \"cart_item_list\",\n                attachment_type=allure.attachment_type.TEXT,\n            )\n            assert cart_item_list == shop_list\n    \n        with allure.step(\"Fill in with valid values\"):\n            cart.fill_in_order_info(checkout_info)\n            cart.fill_in_payment_info(checkout_info)\n            allure.attach(\n                json.dumps(checkout_info, indent=2, ensure_ascii=False),\n                \"checkout_info\",\n                attachment_type=allure.attachment_type.TEXT,\n            )\n            cart.checkout()\n    \n        with allure.step(\"Check if notice message shows\"):\n            alert = cart.wait_alert_prompt()\n            logging.info(f\"Alert message is {alert.text}\")\n>           assert alert.text == \"付款成功\"\nE           AssertionError: assert 'For Item: [object Object], Product Price is required.' == '付款成功'\nE             - 付款成功\nE             + For Item: [object Object], Product Price is required.\n\ntests_web/test_web_checkout.py:213: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"database","time":{"start":1671543045691,"stop":1671543045739,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"product_detail","time":{"start":1671543045740,"stop":1671543048988,"duration":3248},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"user","time":{"start":1671543078127,"stop":1671543078128,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1671543078127,"stop":1671543078127,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"all_color_code","time":{"start":1671543090260,"stop":1671543090267,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"browser","time":{"start":1671543247263,"stop":1671543247263,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1671543247263,"stop":1671543249511,"duration":2248},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"random_product_ids","time":{"start":1671543249513,"stop":1671543249526,"duration":13},"status":"passed","steps":[],"attachments":[{"uid":"f25b6281b534ce99","name":"all_product_id_name","source":"f25b6281b534ce99.txt","type":"text/plain","size":1130}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"testStage":{"description":"\n    檢查輸入有效的訂單資訊時，可成功結帳且結帳商品的資訊正確。\n    ","status":"failed","statusMessage":"AssertionError: assert 'For Item: [object Object], Product Price is required.' == '付款成功'\n  - 付款成功\n  + For Item: [object Object], Product Price is required.","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b3a05385d635be4de26410a727f3fbb6\")>\nrandom_product_ids = [201807202157, 1671541958752]\nall_color_code = {'亮綠': 'DDFFBB', '深藍': '334455', '淺棕': 'BB7744', '淺灰': 'CCCCCC', ...}\nuser = {'email': 'foo@bar.baz', 'password': '1234567890'}\ncheckout_info = {'Address': '台北市', 'Credit Card No': '4242 4242 4242 4242', 'Deliver Time': 'Anytime', 'Email': 'abc@abc.com', ...}\n\n    @allure.feature(\"Checkout\")\n    @allure.story(\"Checkout\")\n    @allure.title(\"Checkout with valid values\")\n    @allure.testcase(\n        TESTCASE_BASE_LINK + TESTCASE_CATEGORY + \"checkout-with-valid-values-3-test-cases\",\n        \"Checkout with valid values\",\n    )\n    @pytest.mark.parametrize(\"checkout_info\", valid_checkout_values)\n    def test_checkout_with_valid_values(driver, random_product_ids, all_color_code, user, checkout_info):\n        \"\"\"\n        檢查輸入有效的訂單資訊時，可成功結帳且結帳商品的資訊正確。\n        \"\"\"\n        with allure.step(\"Login success\"):\n            login = LoginPage(driver, \"http://54.201.140.239/login.html\")\n            login.enter_email_and_password(user[\"email\"], user[\"password\"])\n            login.login()\n            alert = login.wait_alert_prompt()\n            alert.accept()\n    \n        with allure.step(\"Add products to shopping cart\"):\n            product = ProductPage(driver)\n            shop_list = []\n            for id in random_product_ids:\n                product.open_product_page(id)\n                shop_list.append(\n                    {\n                        \"id\": str(id),\n                        \"name\": product.get_product_name(),\n                        \"color\": {v: k for k, v in all_color_code.items()}[product.select_random_color()],\n                        \"size\": product.select_random_size(),\n                        \"quantity\": product.select_random_quantity(),\n                        \"price\": product.get_product_price(),\n                        \"subtotal\": product.get_current_quantity() * product.get_product_price(),\n                    }\n                )\n                product.add_product_to_cart()\n                alert = product.wait_alert_prompt()\n                alert.accept()\n                logging.info(shop_list[-1])\n            allure.attach(\n                json.dumps(shop_list, indent=2, ensure_ascii=False),\n                \"cart_item_list\",\n                attachment_type=allure.attachment_type.TEXT,\n            )\n    \n        with allure.step(\"Enter shopping cart\"):\n            cart = CartPage(driver)\n            cart.enter_shopping_cart()\n    \n        with allure.step(\"Check if product info is displayed correctly in cart\"):\n            cart_item_list = []\n            for item in cart.get_cart_items():\n                cart_item_list.append(cart.get_item_info(item))\n            allure.attach(\n                json.dumps(cart_item_list, indent=2, ensure_ascii=False),\n                \"cart_item_list\",\n                attachment_type=allure.attachment_type.TEXT,\n            )\n            assert cart_item_list == shop_list\n    \n        with allure.step(\"Fill in with valid values\"):\n            cart.fill_in_order_info(checkout_info)\n            cart.fill_in_payment_info(checkout_info)\n            allure.attach(\n                json.dumps(checkout_info, indent=2, ensure_ascii=False),\n                \"checkout_info\",\n                attachment_type=allure.attachment_type.TEXT,\n            )\n            cart.checkout()\n    \n        with allure.step(\"Check if notice message shows\"):\n            alert = cart.wait_alert_prompt()\n            logging.info(f\"Alert message is {alert.text}\")\n>           assert alert.text == \"付款成功\"\nE           AssertionError: assert 'For Item: [object Object], Product Price is required.' == '付款成功'\nE             - 付款成功\nE             + For Item: [object Object], Product Price is required.\n\ntests_web/test_web_checkout.py:213: AssertionError","steps":[{"name":"Login success","time":{"start":1671543249528,"stop":1671543253644,"duration":4116},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Add products to shopping cart","time":{"start":1671543253644,"stop":1671543261915,"duration":8271},"status":"passed","steps":[],"attachments":[{"uid":"b125d46cda320be1","name":"cart_item_list","source":"b125d46cda320be1.txt","type":"text/plain","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Enter shopping cart","time":{"start":1671543261915,"stop":1671543263482,"duration":1567},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Check if product info is displayed correctly in cart","time":{"start":1671543263482,"stop":1671543268490,"duration":5008},"status":"passed","steps":[],"attachments":[{"uid":"871735c6be391a28","name":"cart_item_list","source":"871735c6be391a28.txt","type":"text/plain","size":326}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Fill in with valid values","time":{"start":1671543268491,"stop":1671543273776,"duration":5285},"status":"passed","steps":[],"attachments":[{"uid":"596c684936bbdef8","name":"checkout_info","source":"596c684936bbdef8.txt","type":"text/plain","size":231}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check if notice message shows","time":{"start":1671543273776,"stop":1671543274359,"duration":583},"status":"failed","statusMessage":"AssertionError: assert 'For Item: [object Object], Product Price is required.' == '付款成功'\n  - 付款成功\n  + For Item: [object Object], Product Price is required.\n","statusTrace":"  File \"/Users/mingchun/.jenkins/workspace/Stylish - Web UI Automation Test/student/mingchun/PJT_Automation/tests_web/test_web_checkout.py\", line 213, in test_checkout_with_valid_values\n    assert alert.text == \"付款成功\"\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"49666af66d41d77a","name":"log","source":"49666af66d41d77a.txt","type":"text/plain","size":889}],"parameters":[],"stepsCount":6,"attachmentsCount":4,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1671543275136,"stop":1671543275236,"duration":100},"status":"broken","statusMessage":"selenium.common.exceptions.UnexpectedAlertPresentException: Alert Text: For Item: [object Object], Product Price is required.\nMessage: unexpected alert open: {Alert text : For Item: [object Object], Product Price is required.}\n  (Session info: headless chrome=108.0.5359.124)\nStacktrace:\n0   chromedriver                        0x0000000106907f38 chromedriver + 4910904\n1   chromedriver                        0x0000000106887a03 chromedriver + 4385283\n2   chromedriver                        0x00000001064cc747 chromedriver + 472903\n3   chromedriver                        0x00000001065520ce chromedriver + 1020110\n4   chromedriver                        0x0000000106536ee3 chromedriver + 909027\n5   chromedriver                        0x000000010650130c chromedriver + 688908\n6   chromedriver                        0x000000010650288e chromedriver + 694414\n7   chromedriver                        0x00000001068d51de chromedriver + 4702686\n8   chromedriver                        0x00000001068d9b19 chromedriver + 4721433\n9   chromedriver                        0x00000001068e128e chromedriver + 4752014\n10  chromedriver                        0x00000001068da91a chromedriver + 4725018\n11  chromedriver                        0x00000001068aeb02 chromedriver + 4545282\n12  chromedriver                        0x00000001068f9888 chromedriver + 4851848\n13  chromedriver                        0x00000001068f9a05 chromedriver + 4852229\n14  chromedriver                        0x000000010690fe5f chromedriver + 4943455\n15  libsystem_pthread.dylib             0x00007ff807ec74e1 _pthread_start + 125\n16  libsystem_pthread.dylib             0x00007ff807ec2f6b thread_start + 15\n\n","statusTrace":"  File \"/Users/mingchun/AppWorks/Automation-Test-Program-Batch1/student/mingchun/PJT_Automation/.venv/lib/python3.10/site-packages/allure_commons/_allure.py\", line 209, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/Users/mingchun/AppWorks/Automation-Test-Program-Batch1/student/mingchun/PJT_Automation/.venv/lib/python3.10/site-packages/_pytest/fixtures.py\", line 916, in _teardown_yield_fixture\n    next(it)\n  File \"/Users/mingchun/.jenkins/workspace/Stylish - Web UI Automation Test/student/mingchun/PJT_Automation/tests_web/conftest.py\", line 54, in driver\n    allure.attach(driver.get_screenshot_as_png(), \"final_screeshot\", allure.attachment_type.PNG)\n  File \"/Users/mingchun/AppWorks/Automation-Test-Program-Batch1/student/mingchun/PJT_Automation/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 965, in get_screenshot_as_png\n    return b64decode(self.get_screenshot_as_base64().encode(\"ascii\"))\n  File \"/Users/mingchun/AppWorks/Automation-Test-Program-Batch1/student/mingchun/PJT_Automation/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 977, in get_screenshot_as_base64\n    return self.execute(Command.SCREENSHOT)[\"value\"]\n  File \"/Users/mingchun/AppWorks/Automation-Test-Program-Batch1/student/mingchun/PJT_Automation/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 444, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/mingchun/AppWorks/Automation-Test-Program-Batch1/student/mingchun/PJT_Automation/.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 248, in check_response\n    raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"labels":[{"name":"story","value":"Checkout"},{"name":"feature","value":"Checkout"},{"name":"parentSuite","value":"tests_web"},{"name":"suite","value":"test_web_checkout"},{"name":"host","value":"Mingchuns-MBP"},{"name":"thread","value":"54973-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_web.test_web_checkout"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"checkout_info","value":"{'Receiver': '陳大文', 'Email': 'abc@abc.com', 'Mobile': '0912345678', 'Address': '台北市', 'Deliver Time': 'Anytime', 'Credit Card No': '4242 4242 4242 4242', 'Expiry Date': '12/69', 'Security Code': '123'}"}],"links":[{"name":"Checkout with valid values","url":"https://github.com/AppWorks-School-Materials/Automation-Test-Program-Batch1/blob/main/week_6/part-2/Project1_UIAutomation.md#scenario-checkout-with-valid-values-3-test-cases","type":"test_case"}],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"e38d98a02248e7fd.json","parameterValues":["{'Receiver': '陳大文', 'Email': 'abc@abc.com', 'Mobile': '0912345678', 'Address': '台北市', 'Deliver Time': 'Anytime', 'Credit Card No': '4242 4242 4242 4242', 'Expiry Date': '12/69', 'Security Code': '123'}"]}