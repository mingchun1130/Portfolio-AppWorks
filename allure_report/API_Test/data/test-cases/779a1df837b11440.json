{"uid":"779a1df837b11440","name":"[Irregular] Broken order attribute","fullName":"tests_api.test_order_apis#test_order_with_broken_order_info","historyId":"393129c1983dba5a149dcb49153ef0f1","time":{"start":1671545392561,"stop":1671545392794,"duration":233},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"order = <api_objects.order.OrderAPI object at 0x1146b2dd0>\norder_info = {'order': {'freight': 30, 'payment': 'credit_card', 'recipient': {'address': '台北市', 'email': 'abc@abc.com', 'name': '陳...5678', ...}, 'shipping': 'delivery', ...}, 'prime': 'fc9200999a2e598ec09335f45418801f21a5a46a515b8b1ee0f1b61c218566ed'}\nattr = 'list'\n\n    @allure.feature(\"Order APIs\")\n    @allure.story(\"/order\")\n    @allure.title(\"[Irregular] Broken order attribute\")\n    @pytest.mark.parametrize(\"attr\", [*order_attr])\n    def test_order_with_broken_order_info(order: OrderAPI, order_info: dict, attr: str):\n        with allure.step(f'Make an order without order attr \"{attr}\"'):\n            order_info[\"order\"].pop(attr)\n            response = order.make_an_order(order_info)\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_order_apis.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"valid_user_account","time":{"start":1671545327066,"stop":1671545327068,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1671545327066,"stop":1671545327066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_products","time":{"start":1671545332997,"stop":1671545336700,"duration":3703},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"order","time":{"start":1671545387345,"stop":1671545387837,"duration":492},"status":"passed","steps":[],"attachments":[{"uid":"e3d073b540e2ecf7","name":"Login Request Body","source":"e3d073b540e2ecf7.txt","type":"text/plain","size":76},{"uid":"a8cb53fc972faeaa","name":"Response Headers","source":"a8cb53fc972faeaa.txt","type":"text/plain","size":301},{"uid":"c9938d38d771041f","name":"Response Body","source":"c9938d38d771041f.txt","type":"text/plain","size":475}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"driver","time":{"start":1671545387837,"stop":1671545389675,"duration":1838},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prime","time":{"start":1671545389675,"stop":1671545392544,"duration":2869},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"shopping_cart","time":{"start":1671545392545,"stop":1671545392558,"duration":13},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"order_info","time":{"start":1671545392559,"stop":1671545392559,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"order = <api_objects.order.OrderAPI object at 0x1146b2dd0>\norder_info = {'order': {'freight': 30, 'payment': 'credit_card', 'recipient': {'address': '台北市', 'email': 'abc@abc.com', 'name': '陳...5678', ...}, 'shipping': 'delivery', ...}, 'prime': 'fc9200999a2e598ec09335f45418801f21a5a46a515b8b1ee0f1b61c218566ed'}\nattr = 'list'\n\n    @allure.feature(\"Order APIs\")\n    @allure.story(\"/order\")\n    @allure.title(\"[Irregular] Broken order attribute\")\n    @pytest.mark.parametrize(\"attr\", [*order_attr])\n    def test_order_with_broken_order_info(order: OrderAPI, order_info: dict, attr: str):\n        with allure.step(f'Make an order without order attr \"{attr}\"'):\n            order_info[\"order\"].pop(attr)\n            response = order.make_an_order(order_info)\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_order_apis.py:135: AssertionError","steps":[{"name":"Make an order without order attr \"list\"","time":{"start":1671545392561,"stop":1671545392794,"duration":233},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"/Users/mingchun/.jenkins/workspace/Stylish - API Automation Test/student/mingchun/PJT_Automation/tests_api/test_order_apis.py\", line 135, in test_order_with_broken_order_info\n    assert response.status_code == 400\n","steps":[],"attachments":[{"uid":"bd8f07c2fff2b940","name":"Order Detail","source":"bd8f07c2fff2b940.txt","type":"text/plain","size":388},{"uid":"49c3e41affc6b1a7","name":"Response Headers","source":"49c3e41affc6b1a7.txt","type":"text/plain","size":299},{"uid":"f395fd18a49705c0","name":"Response Body","source":"f395fd18a49705c0.txt","type":"text/plain","size":41}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"dbb1980dba84220","name":"log","source":"dbb1980dba84220.txt","type":"text/plain","size":1724}],"parameters":[],"stepsCount":1,"attachmentsCount":4,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1671545392813,"stop":1671545392888,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"/order"},{"name":"feature","value":"Order APIs"},{"name":"parentSuite","value":"tests_api"},{"name":"suite","value":"test_order_apis"},{"name":"host","value":"Mingchuns-MBP"},{"name":"thread","value":"56996-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_api.test_order_apis"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attr","value":"'list'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"779a1df837b11440.json","parameterValues":["'list'"]}