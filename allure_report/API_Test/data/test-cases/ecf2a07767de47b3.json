{"uid":"ecf2a07767de47b3","name":"[Irregular] Broken order attribute","fullName":"tests_api.test_order_apis#test_order_with_broken_order_info","historyId":"393129c1983dba5a149dcb49153ef0f1","time":{"start":1671545403658,"stop":1671545403906,"duration":248},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"order = <api_objects.order.OrderAPI object at 0x114905e10>\norder_info = {'order': {'freight': 30, 'payment': 'credit_card', 'recipient': {'address': '台北市', 'email': 'abc@abc.com', 'name': '陳...5678', ...}, 'shipping': 'delivery', ...}, 'prime': 'b5a4a5778ba1f51f4baa9accb7200a7fa60b979c11cf9ea91ef027909da2760b'}\nattr = 'list'\n\n    @allure.feature(\"Order APIs\")\n    @allure.story(\"/order\")\n    @allure.title(\"[Irregular] Broken order attribute\")\n    @pytest.mark.parametrize(\"attr\", [*order_attr])\n    def test_order_with_broken_order_info(order: OrderAPI, order_info: dict, attr: str):\n        with allure.step(f'Make an order without order attr \"{attr}\"'):\n            order_info[\"order\"].pop(attr)\n            response = order.make_an_order(order_info)\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_order_apis.py:135: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":3,"retriesStatusChange":false,"beforeStages":[{"name":"valid_user_account","time":{"start":1671545327066,"stop":1671545327068,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"worker_id","time":{"start":1671545327066,"stop":1671545327066,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"db_products","time":{"start":1671545332997,"stop":1671545336700,"duration":3703},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"order","time":{"start":1671545397971,"stop":1671545398440,"duration":469},"status":"passed","steps":[],"attachments":[{"uid":"4b337fcf97a633c0","name":"Login Request Body","source":"4b337fcf97a633c0.txt","type":"text/plain","size":76},{"uid":"2e2a82e94b405551","name":"Response Headers","source":"2e2a82e94b405551.txt","type":"text/plain","size":301},{"uid":"af981e704049d14","name":"Response Body","source":"af981e704049d14.txt","type":"text/plain","size":475}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":false,"hasContent":true},{"name":"driver","time":{"start":1671545398440,"stop":1671545400538,"duration":2098},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"prime","time":{"start":1671545400539,"stop":1671545403651,"duration":3112},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"shopping_cart","time":{"start":1671545403651,"stop":1671545403657,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"order_info","time":{"start":1671545403657,"stop":1671545403658,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"order = <api_objects.order.OrderAPI object at 0x114905e10>\norder_info = {'order': {'freight': 30, 'payment': 'credit_card', 'recipient': {'address': '台北市', 'email': 'abc@abc.com', 'name': '陳...5678', ...}, 'shipping': 'delivery', ...}, 'prime': 'b5a4a5778ba1f51f4baa9accb7200a7fa60b979c11cf9ea91ef027909da2760b'}\nattr = 'list'\n\n    @allure.feature(\"Order APIs\")\n    @allure.story(\"/order\")\n    @allure.title(\"[Irregular] Broken order attribute\")\n    @pytest.mark.parametrize(\"attr\", [*order_attr])\n    def test_order_with_broken_order_info(order: OrderAPI, order_info: dict, attr: str):\n        with allure.step(f'Make an order without order attr \"{attr}\"'):\n            order_info[\"order\"].pop(attr)\n            response = order.make_an_order(order_info)\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests_api/test_order_apis.py:135: AssertionError","steps":[{"name":"Make an order without order attr \"list\"","time":{"start":1671545403659,"stop":1671545403906,"duration":247},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"/Users/mingchun/.jenkins/workspace/Stylish - API Automation Test/student/mingchun/PJT_Automation/tests_api/test_order_apis.py\", line 135, in test_order_with_broken_order_info\n    assert response.status_code == 400\n","steps":[],"attachments":[{"uid":"1a855898554f4e94","name":"Order Detail","source":"1a855898554f4e94.txt","type":"text/plain","size":386},{"uid":"e0c6e15630fa913a","name":"Response Headers","source":"e0c6e15630fa913a.txt","type":"text/plain","size":299},{"uid":"9f670fbe740ac5d9","name":"Response Body","source":"9f670fbe740ac5d9.txt","type":"text/plain","size":41}],"parameters":[],"stepsCount":0,"attachmentsCount":3,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"c7bdabf860cfcd91","name":"log","source":"c7bdabf860cfcd91.txt","type":"text/plain","size":2299}],"parameters":[],"stepsCount":1,"attachmentsCount":4,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1671545403917,"stop":1671545404013,"duration":96},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"/order"},{"name":"feature","value":"Order APIs"},{"name":"parentSuite","value":"tests_api"},{"name":"suite","value":"test_order_apis"},{"name":"host","value":"Mingchuns-MBP"},{"name":"thread","value":"56996-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests_api.test_order_apis"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"attr","value":"'list'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"779a1df837b11440","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1671545392561,"stop":1671545392794,"duration":233}},{"uid":"29da0f3045ce989f","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1671545381986,"stop":1671545382192,"duration":206}},{"uid":"fbd0e97d3b9cc3e3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1671545370770,"stop":1671545371077,"duration":307}}],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":4},"items":[{"uid":"c5998dbeec2042b3","reportUrl":"http://localhost:8080/job/Stylish%20-%20API%20Automation%20Test/4/allure/#testresult/c5998dbeec2042b3","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1671542534144,"stop":1671542534514,"duration":370}},{"uid":"2028a18865596c12","reportUrl":"http://localhost:8080/job/Stylish%20-%20API%20Automation%20Test/3/allure/#testresult/2028a18865596c12","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1671447484450,"stop":1671447484638,"duration":188}},{"uid":"6cda034f777b14a5","reportUrl":"http://localhost:8080/job/Stylish%20-%20API%20Automation%20Test/2/allure/#testresult/6cda034f777b14a5","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1671351089844,"stop":1671351090327,"duration":483}}]},"tags":[]},"source":"ecf2a07767de47b3.json","parameterValues":["'list'"]}